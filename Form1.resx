<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAALYUAAC2FAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAD/nUcC/51HAP+dRyv/nUfh/51HC/+dRwD/nUcA/51HC/+dR+H/nUcr/51HAP+d
        RwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+dRwD/nUcB/51HAP+dR8v/nUeS/51HAP+dRwD/nUeR/51Hzf+d
        RwD/nUcA/51HAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/51HAP+dRwL/nUcA/51HIf+dR9b/nUfg/51H3/+d
        R9n/nUck/51HAP+dRwL/nUcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/nUcA/51HAP+dRwH/nEcA/51HBf+d
        Rz//nUdA/51HBv+dRwD/nUcB/51HAP+dRwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+dRwD/nUcA/51HAP+d
        RwL/nUcC/51HAP+dRwD/nUcC/51HAv+dRwD/nUcA/51HAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+d
        RwD/nUcA/51HAP+dRwH/nUcD/51HA/+dRwH/nUcA/51HAP+dRwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////////////////////////////////9AAv//n/n//kACf/5A
        An/+S9J//kmSf/9AAv/+oAV//0pS//+gBf//yBP//9GL///Ri///yZP//8gT///UK///6Zf///Qv////
        //////////////////////////////////8=
</value>
  </data>
</root>